{
  "name": "grunt-jasmine-legacy",
  "version": "1.0.3",
  "description": "A Grunt task for running Jasmine v1.3 tests using RequireJS and PhantomJS",
  "main": "src/grunt-jasmine-legacy",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "keywords": [
    "grunt",
    "jasmine",
    "v1.3",
    "legacy",
    "requirejs",
    "amd",
    "phantomjs",
    "headless"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/hamweather/grunt-jasmine-legacy.git"
  },
  "author": {
    "name": "Edan Schwartz",
    "email": "edan@edanschwartz.com",
    "url": "http://www.edanschwartz.com"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/hamweather/grunt-jasmine-legacy/issues"
  },
  "homepage": "https://github.com/hamweather/grunt-jasmine-legacy",
  "dependencies": {
    "grunt": "~0.4.3",
    "phantomjs": "~1.9.7-1",
    "grunt-lib-phantomjs": "~0.5.0",
    "chalk": "~0.4.0",
    "underscore": "~1.6.0",
    "when": "~2.8.0"
  },
  "readme": "grunt-jasmine-legacy\n=================\n\n> A Grunt task for running Jasmine v1.3 tests using RequireJS and PhantomJS.\n\n## Getting Started\n\nThis plugin requires Grunt `~0.4.0`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-jasmine-legacy --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-jasmine-legacy,');\n```\n\n\n## Why not use [grunt-contrib-jasmine](https://github.com/gruntjs/grunt-contrib-jasmine)?\n\nThe [grunt-contrib-jasmine](https://github.com/gruntjs/grunt-contrib-jasmine) task has [dropped support for Jasmine v1.3](https://github.com/gruntjs/grunt-contrib-jasmine/commit/c755025c577af6383b8eba754ea8cf542a084d74). I created this task for a project with a large base of tests written using the Jasmine v1.3 API.\n\n## How does it work?\n\nThe grunt-jasmine-legacy task:\n\n* Uses a [template](src/templates/specrunner.html.tmpl) to create an AMD spec runner\n* Executes the spec runner using [`PhantomJS`](http://phantomjs.org/)\n* Reports the results using the `PhantomJSReporter`, which listens to events emitted by [grunt-lib-phantomjs](https://github.com/gruntjs/grunt-lib-phantomjs), and outputs test results to the console.\n* Saves the spec runner HTML file for further debugging, if needed (using the standard `jasmine.HTMLReporter`)\n\n\n## Example configuration\n\n```javascript\n'jasmine-legacy': {\n\n  // Each sub-task will have a specrunner created for it\n  // eg /tests/specrunner-myLib.html\n  myLib: {\n    options: {\n\n      // Location of require.config settings\n      amdConfigModules: [\n        '../config-amd'\n      ],\n\n      // Additional AMD configuration\n      // to apply to the spec runner\n      amdConfig: {\n        paths: {\n          someRealObject: 'someMockObject'\n        }\n      },\n\n      // Location of Jasmine specs to test\n      specs: [\n        'tests/**/*.spec.js'\n      ],\n\n      // AMD modules required for all tests\n      libs: [\n        'jasmine',\n        'jasmine-console',\n        'jasmine-html',\n        'lib/myCustomJasmineMatchers',\n        'sinon'\n      ],\n\n      // Files to not be included as test specs\n      exclude: [\n        'tests/fixtures/**/*.js'\n      ]\n    }\n  },\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "grunt-jasmine-legacy@1.0.3",
  "_from": "grunt-jasmine-legacy@~1.0.3"
}
